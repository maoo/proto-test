language: java

node_js:
  - "8.9.1"

go:
  - "1.10"

env:
  global:
    - PROTOBUF_VERSION=3.6.1
    # TODO - this should be local, ie ./node_modules/.bin/protoc-gen-ts,
    # but needs a package.json devDependency definition
    # This is what works on Docker (ubuntu:latest, see README.md)
    # - PROTOC_GEN_TS_PATH="/usr/local/lib/node_modules/ts-protoc-gen/bin/protoc-gen-ts"
    # This is what works in Travis CI
    - PROTOC_GEN_TS_PATH="/home/travis/.nvm/versions/node/v8.9.1/bin/protoc-gen-ts"
    - PROTOC_GEN_DOCS_PATH="/root/go/bin/protoc-gen-doc"
    - TS_OUT_DIR="./target/generated/ts"
    - C_OUT_DIR="./target/generated/c"
    - JAVA_OUT_DIR="./target/generated/java"
    - PATH=$PATH:~/protobuf-${PROTOBUF_VERSION}/src
    - PROTOC_CMD_PREFIX="protoc --proto_path=./library"
    - PROTOBUF_SRC="./library/*.proto"

cache:
  directories:
    - /home/travis/protobuf-${PROTOBUF_VERSION}

before_install:
  - go get -u github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc
  - "[[ -z \"${FORCE_PROTOBUF_INSTALL}\" ]] || rm -rf protobuf-${PROTOBUF_VERSION} ; echo 'Deleted Protobuf ${PROTOBUF_VERSION} installation'"
  - "[[ -d \"protobuf-${PROTOBUF_VERSION}\" ]] || ./install-protobuf.sh"
  - npm install -g ts-protoc-gen

script:
  - echo "Running the script!"
  - mkdir -p $JAVA_OUT_DIR $TS_OUT_DIR $C_OUT_DIR
  # Generating TypeScript definitions
  - ${PROTOC_CMD_PREFIX} --plugin="protoc-gen-ts=${PROTOC_GEN_TS_PATH}" --js_out="import_style=commonjs,binary:${TS_OUT_DIR}" --ts_out="service=true:${TS_OUT_DIR}" ${PROTOBUF_SRC}
  # Generating Java classes
  - ${PROTOC_CMD_PREFIX} --java_out=${JAVA_OUT_DIR} ${PROTOBUF_SRC}
  # Generating C (TODO - plugin needs to be compiled)
  # - protoc --c_out=${C_OUT_DIR} ./library/*.proto
  # Generating Markdown documentation
  - ${PROTOC_CMD_PREFIX} --plugin="protoc-gen-doc=${PROTOC_GEN_DOCS_PATH}" --doc_opt=markdown,specs.md --doc_out=${DOCS_OUT_DIR} ${PROTOBUF_SRC}
