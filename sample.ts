// This class demoes how to consume the FINOS FO objects
// To check the generated code, open output-samples/model.js
// and model.d.ts

// './target' folder is generated by the Travis build,
// check .travis.yml
// 
// TODO - Consume FOS objects shipped from an NPMJS package
import { org } from "./target/model.js";

let contact = org.finos.fo.Contact.create({
    name: org.finos.fo.Name.create({name: "maoo@finos.org"}), 
    id: org.finos.fo.Id.create({int: 123456}), 
    email: "maoo@finos.org", 
    twitter: "maoo", 
    phone: "+34 123456" });

console.log(contact);

let country = org.finos.fo.Country.create({
    name: org.finos.fo.Name.create({name: "maoo@finos.org"}), 
    ISOALPHA2: "abc", 
    ISOALPHA3: "def" });

console.log(country);
console.log(country.toJSON());

// TODO - how to extend an object? With and without using protobuf?
// 
// export interface IExtContact extends org.finos.fo.IContact {
//     org?: (string|null);
// }

// export class ExtendedContact extends org.finos.fo.Contact implements IExtContact {
//     ExtendedContact(properties) {
//         if (properties)
//             for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
//                 if (properties[keys[i]] != null)
//                     this[keys[i]] = properties[keys[i]];
//     };

//     create(properties?: IExtContact): ExtendedContact {
//         return new ExtendedContact(properties);
//     };
// }

// let extContact = ExtendedContact.create({
//     name: org.finos.fo.Name.create({name: "maoo@finos.org"}), 
//     id: org.finos.fo.Id.create({id: 123456}), 
//     email: "maoo@finos.org",
//     org: "FINOS",
//     twitter: "maoo", 
//     phone: "+34 123456" });

// console.log(extContact);
